import math

l = [[1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 9], [1, 10], [1, 13], [1, 35], [2, 8], [2, 12], [3, 7], [3, 12], [4, 25], [5, 15], [5, 17], [5, 23], [6, 11], [6, 26], [7, 22], [8, 12], [8, 21], [9, 13], [9, 28], [9, 31], [10, 13], [10, 20], [11, 16], [11, 21], [11, 26], [12, 19], [12, 30], [13, 14], [14, 21], [14, 24], [14, 28], [14, 34], [15, 20], [15, 33], [15, 37], [16, 18], [16, 20], [16, 28], [17, 26], [17, 42], [18, 38], [18, 47], [19, 29], [20, 25], [20, 27], [21, 27], [22, 23], [22, 27], [22, 30], [22, 41], [23, 25], [23, 32], [23, 46], [24, 29], [24, 38], [24, 49], [25, 32], [26, 34], [26, 43], [27, 30], [28, 39], [29, 34], [29, 36], [29, 41], [30, 37], [30, 49], [31, 40], [31, 43], [31, 50], [32, 33], [32, 37], [32, 39], [33, 36], [33, 41], [33, 49], [34, 38], [35, 37], [35, 40], [35, 42], [36, 40], [36, 42], [36, 44], [37, 40], [38, 39], [38, 46], [39, 44], [39, 45], [40, 50], [41, 46], [42, 47], [42, 50], [43, 45], [43, 47], [44, 45], [44, 48], [44, 49], [45, 47], [45, 48], [46, 48], [46, 50], [47, 48], [48, 50], [49, 50]]
a = [586, 1414, 1250, 971, 476, 834, 1285, 1101, 1297, 1863, 1446, 1674, 1318, 791, 1873, 1303, 923, 1496, 762, 1278, 666, 795, 1462, 1181, 1373, 523, 734, 1594, 1255, 1951, 1797, 1082, 569, 1669, 1467, 1799, 1445, 785, 1185, 1070, 897, 672, 645, 1309, 529, 1552, 1133, 296, 1852, 1469, 958, 922, 1609, 614, 1816, 1524, 379, 1417, 1331, 1160, 344, 252, 1314, 677, 656, 1130, 937, 619, 841, 1569, 352, 1277, 900, 662, 1548, 1440, 977, 706, 1483, 1691, 1521, 671, 1636, 1661, 691, 964, 1066, 1273, 1453, 1606, 1613, 1615, 663, 1716, 1953, 506, 1223, 1402, 1592, 1544, 1315, 1008, 853, 933, 321, 435, 670, 602]
m = []
k = 0
for i in range(50):
    m.append([0]*50)  #coздание матрицы входных данных
for i in l:
    m[i[0]-1][i[1]-1] = a[k]/1000  #заполнение
    k += 1
p = []
for i in range(50):
    p.append([0]*51)  #coздание матрицы вероятностей
for i in range(50):
    p[0][i] = math.exp(-m[0][i]*0.3156) #вероятность пропуска пакета для маршрутов из сети 1
    if p[0][i] == 1:
        p[0][i] = 0
p[1][50] = p[0][1] #вероятность пропуска пакета, если он попал в сеть 2
for k in range(2, 50):
    s = 0
    for i in range(0, k):
        if m[i][k] != 0 and i != 0:
            p[i][k] = p[i][50]*(math.exp(-m[i][k]*0.3156))  #заполнение остальных элементов матрицы, где есть пути из i в k
        if p[i][k] != 0:
            s = max(s, p[i][k])
    p[k][50] = s #максимальная вероятность пропуска пакета, если он попал в данную сеть: выбираем наилучший для нас маршрут, тк маршрутизация ОТ ИСТОЧНИКА
print(p)

#сложность алгоритма - О(M*N)
